<?php
class Pro_Validate_IsSetCompany extends Zend_Validate_Abstract
{
    /**
     * Error constants
     */
    const HAS_COMPANY    = 'isSetCompany';

    /**
     * @var array Message templates
     */
    protected $_messageTemplates = array(self::HAS_COMPANY => 'The user %value% has the company');

    /**
     * Database adapter to use. If null isValid() will use Zend_Db::getInstance instead
     *
     * @var unknown_type
     */
    protected $_adapter = null;

    public function __construct(Zend_Db_Adapter_Abstract $adapter = null)
    {
        if ($adapter !== null) {
            $this->_adapter = $adapter;
        }
    }

    protected function _query($value)
    {
        /**
         * Check for an adapter being defined. if not, fetch the default adapter.
         */
        if ($this->_adapter === null) {
            $this->_adapter = Zend_Db_Table_Abstract::getDefaultAdapter();
            if (null === $this->_adapter) {
                require_once 'Zend/Validate/Exception.php';
                throw new Zend_Validate_Exception('No database adapter present');
            }
        }

        /**
         * Build select object
         */
        $select = new Zend_Db_Select($this->_adapter);
        $select->from('users', array('id'))
               ->where($this->_adapter->quoteIdentifier('username').' = ?', $value);
        $select->limit(1);

        /**
         * Run query
         */
        $result = $this->_adapter->fetchRow($select, array(), Zend_Db::FETCH_ASSOC);
        
        if ( $result )
        {
	        $company_select = new Zend_Db_Select($this->_adapter);
	        $company_select->from('companies', array('id'))
	               ->where($this->_adapter->quoteIdentifier('user').' = ?', $result['id']);
	        $company_select->limit(1);
	        
	        return $result = $this->_adapter->fetchRow($company_select, array(), Zend_Db::FETCH_ASSOC);
        }
        else return false;
    }
    
    public function isValid($value)
    {
        $valid = true;
        $this->_setValue($value);

        $result = $this->_query($value);
        
        if ($result) {
            $valid = false;
            $this->_error(self::HAS_COMPANY);
        }

        return $valid;
    }
}
